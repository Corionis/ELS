<?xml version="1.0" encoding="UTF-8"?>
<project name="els" default="all">
  
  
  <property file="els-build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value="-Xlint:unchecked"/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.apk"/>
    <include name="*.egg"/>
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.ear"/>
    <include name="*.jar"/>
    <include name="*.ane"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/icedtea-sound.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/java-atk-wrapper.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.els.classpath">
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
    <pathelement location="${basedir}/lib/commons-io-2.11.0.jar"/>
    <pathelement location="${basedir}/lib/commons-lang3-3.12.0.jar"/>
    <pathelement location="${basedir}/lib/flatlaf-2.4.jar"/>
    <pathelement location="${basedir}/lib/gson-2.8.0.jar"/>
    <pathelement location="${basedir}/lib/guava-30.0-jre.jar"/>
    <pathelement location="${basedir}/lib/javax.activation-1.2.0.jar"/>
    <pathelement location="${basedir}/lib/jsch-0.1.55.jar"/>
    <pathelement location="${basedir}/lib/log4j-api-2.16.0.jar"/>
    <pathelement location="${basedir}/lib/log4j-core-2.16.0.jar"/>
    <pathelement location="${basedir}/lib/log4j-slf4j18-impl-2.16.0.jar"/>
    <pathelement location="${basedir}/lib/mina-core-2.0.21.jar"/>
    <pathelement location="${basedir}/lib/slf4j-api-1.7.9.jar"/>
    <pathelement location="${basedir}/lib/slf4j-simple-1.7.9.jar"/>
    <pathelement location="${basedir}/lib/sshd-common-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/sshd-core-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/sshd-mina-2.5.1.jar"/>
    <pathelement location="${basedir}/lib/sshd-sftp-2.5.1.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="forms-*.jar"/>
      <include name="forms_rt.jar"/>
    </fileset>
    <fileset dir="${idea.home}/plugins/java/lib">
      <include name="javac2.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module ELS -->
  
  <dirname property="module.els.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.els" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.els" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.els" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.els" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="els.output.dir" value="${module.els.basedir}/out/production/ELS"/>
  <property name="els.testoutput.dir" value="${module.els.basedir}/out/test/ELS"/>
  
  <path id="els.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="els.module.production.classpath">
    <path refid="${module.jdk.classpath.els}"/>
    <path refid="library.els.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-M3.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-M1.jar"/>
  </path>
  
  <path id="els.runtime.production.module.classpath">
    <pathelement location="${els.output.dir}"/>
    <path refid="library.els.classpath"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-M3.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-M1.jar"/>
  </path>
  
  <path id="els.module.classpath">
    <path refid="${module.jdk.classpath.els}"/>
    <pathelement location="${els.output.dir}"/>
    <path refid="library.els.classpath"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-M3.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-M1.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-M3.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-M1.jar"/>
  </path>
  
  <path id="els.runtime.module.classpath">
    <pathelement location="${els.testoutput.dir}"/>
    <pathelement location="${els.output.dir}"/>
    <path refid="library.els.classpath"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-M3.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-M1.jar"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${idea.home}/lib/junit-4.12.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/junit-jupiter-api-5.0.0-M3.jar"/>
    <pathelement location="${idea.home}/plugins/junit/lib/opentest4j-1.0.0-M1.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.els">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.els">
    <patternset refid="excluded.from.module.els"/>
  </patternset>
  
  <path id="els.module.sourcepath">
    <dirset dir="${module.els.basedir}">
      <include name="src/com/groksoft/els/resources"/>
      <include name="artifacts/images"/>
      <include name="src"/>
      <include name="src/com/groksoft/els/locales"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.els" depends="compile.module.els.production,compile.module.els.tests" description="Compile module ELS"/>
  
  <target name="compile.module.els.production" depends="register.custom.compilers" description="Compile module ELS; production classes">
    <mkdir dir="${els.output.dir}"/>
    <javac2 destdir="${els.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.els}/javac">
      <compilerarg line="${compiler.args.els}"/>
      <bootclasspath refid="els.module.bootclasspath"/>
      <classpath refid="els.module.production.classpath"/>
      <src refid="els.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.els"/>
    </javac2>
    
    <copy todir="${els.output.dir}">
      <fileset dir="${module.els.basedir}/src/com/groksoft/els/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.els.basedir}/artifacts/images">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.els.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.els.basedir}/src/com/groksoft/els/locales">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.els.tests" depends="register.custom.compilers,compile.module.els.production" description="compile module ELS; test classes" unless="skip.tests"/>
  
  <target name="clean.module.els" description="cleanup module">
    <delete dir="${els.output.dir}"/>
    <delete dir="${els.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.els, clean.artifact.els-complete.zip" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.els" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.els-complete.zip" value="${basedir}/deploy"/>
    <property name="artifact.output.els:jar" value="${basedir}/deploy"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.ELS-complete.zip" value="${artifacts.temp.dir}/ELS-complete.zip"/>
    <property name="temp.jar.path.ELS.jar" value="${artifacts.temp.dir}/ELS.jar"/>
  </target>
  
  <target name="clean.artifact.els-complete.zip" description="clean ELS-complete.zip artifact output">
    <delete dir="${artifact.output.els-complete.zip}"/>
  </target>
  
  <target name="artifact.els-complete.zip" depends="init.artifacts, artifact.els:jar" description="Build &#39;ELS-complete.zip&#39; artifact">
    <mkdir dir="${artifact.output.els-complete.zip}"/>
    <zip destfile="${temp.jar.path.ELS-complete.zip}">
      <zipfileset dir="${artifact.temp.output.els:jar}" prefix="els"/>
      <zipfileset dir="${basedir}/artifacts/complete/linux" prefix="els/linux"/>
      <zipfileset dir="${basedir}/artifacts/complete/meta" prefix="els/meta"/>
      <zipfileset dir="${basedir}/artifacts/complete/windows" prefix="els/windows"/>
      <zipfileset file="${basedir}/artifacts/complete/README.txt" prefix="els"/>
      <zipfileset file="${basedir}/artifacts/document/command-line.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/communications.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/developer.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/json-structure.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/modes.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/downloads.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/els-plex-generator.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/regular-expressions.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/contact.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/hint-status.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/hints.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/home.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/document/release-notes.md" prefix="els/docs"/>
      <zipfileset file="${basedir}/artifacts/complete/els-hints.keys" prefix="els"/>
    </zip>
    <copy file="${temp.jar.path.ELS-complete.zip}" tofile="${artifact.output.els-complete.zip}/ELS-complete.zip"/>
  </target>
  
  <target name="artifact.els:jar" depends="init.artifacts, compile.module.els" description="Build &#39;ELS:jar&#39; artifact">
    <property name="artifact.temp.output.els:jar" value="${artifacts.temp.dir}/ELS_jar"/>
    <mkdir dir="${artifact.temp.output.els:jar}"/>
    <ant antfile="els.xml" target="stamp" dir="${basedir}">
      <property name="artifact.output.path" value="${artifact.temp.output.els:jar}"/>
    </ant>
    <jar destfile="${temp.jar.path.ELS.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${els.output.dir}"/>
      <zipfileset src="${basedir}/lib/gson-2.8.0.jar"/>
      <zipfileset file="${basedir}/lib/log4j2.xml"/>
      <zipfileset src="${basedir}/lib/guava-30.0-jre.jar"/>
      <zipfileset src="${basedir}/lib/mina-core-2.0.21.jar"/>
      <zipfileset src="${basedir}/lib/sshd-core-2.5.1.jar"/>
      <zipfileset src="${basedir}/lib/sshd-common-2.5.1.jar"/>
      <zipfileset src="${basedir}/lib/sshd-mina-2.5.1.jar"/>
      <zipfileset src="${basedir}/lib/sshd-sftp-2.5.1.jar"/>
      <zipfileset src="${basedir}/lib/jsch-0.1.55.jar"/>
      <zipfileset src="${basedir}/lib/commons-lang3-3.12.0.jar"/>
      <zipfileset src="${basedir}/lib/log4j-api-2.16.0.jar"/>
      <zipfileset src="${basedir}/lib/log4j-core-2.16.0.jar"/>
      <zipfileset src="${basedir}/lib/log4j-slf4j18-impl-2.16.0.jar"/>
      <zipfileset src="${basedir}/lib/slf4j-api-1.7.9.jar"/>
      <zipfileset src="${basedir}/lib/slf4j-simple-1.7.9.jar"/>
      <zipfileset src="${basedir}/lib/commons-io-2.11.0.jar"/>
      <zipfileset src="${basedir}/lib/javax.activation-1.2.0.jar"/>
      <zipfileset src="${basedir}/lib/flatlaf-2.4.jar"/>
    </jar>
    <copy file="${temp.jar.path.ELS.jar}" tofile="${artifact.temp.output.els:jar}/ELS.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.els-complete.zip, artifact.els:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.els:jar}"/>
    <copy todir="${artifact.output.els:jar}">
      <fileset dir="${artifact.temp.output.els:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>