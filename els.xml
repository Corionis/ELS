<?xml version="1.0" encoding="UTF-8"?>
<project name="ELS Build" default="All" basedir=".">

    <target name="init">
        <property file="els.properties"/>
        <echo message="ELS version ${els.version.name}" level="info"/>
        <echo message="${java.vendor} ${java.runtime.name} ${java.runtime.version}" level="info"/>
        <echo message="${ant.version}" level="info"/>
        <path id="class.path">
            <fileset dir="lib">
                <include name="*.jar"/>
                <include name="org.apache.logging.log4j.core.config.plugins.processor.PluginProcessor"/>
            </fileset>
        </path>
    </target>

    <target name="clean" depends="init">
        <delete dir="out/els" failonerror="false"/>
        <delete dir="out/updater" failonerror="false"/>
        <mkdir dir="out"/>
    </target>

    <target name="locale" depends="clean">
        <!-- Copy the IDE default bundle to the en_US bundle used by ELS -->
        <copy overwrite="true" file="src/com/corionis/els/locales/bundle.properties" tofile="src/com/corionis/els/locales/bundle_en_US.properties"/>
    </target>

    <target name="set-stamp" depends="locale">
        <tstamp>
            <format property="STRINGNOW" pattern="d MMMM yyyy, HH:mm zzz" locale="en,US"/>
            <format property="NUMBERNOW" pattern="yyMMddHHmm" locale="en,US"/>
        </tstamp>
        <echo file="build/build-stamp.properties" append="false">els.build.stamp=${STRINGNOW}${line.separator}</echo>
        <echo file="build/build-stamp.properties" append="true">els.build.number=${NUMBERNOW}${line.separator}</echo>
    </target>

    <target name="write-version">
        <!-- Write the version.info file -->
        <delete file="build/version.info" failonerror="false"/>
        <echo file="build/version.info" append="false">${els.version.name}${line.separator}</echo>
        <echo file="build/version.info" append="true">${NUMBERNOW}${line.separator}</echo>
        <echo file="build/version.info" append="true">${STRINGNOW}${line.separator}</echo>
        <echo file="build/version.info" append="true">ELS-${els.version.name}-${NUMBERNOW}${line.separator}</echo>
        <echo file="build/version.info" append="true">ELS_Updater-${els.version.name}-${NUMBERNOW}${line.separator}</echo>
        <echo file="build/version.info" append="true">${els.changes.url}${line.separator}</echo>
    </target>

    <target name="append-flags" if="els.build.flags">
        <!-- Append optional flags to the version.info file if set -->
        <echo>${els.build.flags}${line.separator}</echo>
        <echo file="build/version.info" append="true">${els.build.flags}${line.separator}</echo>
    </target>

    <!-- Build stamp -->
    <target name="stamp" depends="set-stamp, write-version, append-flags">
        <echo message="Build stamp ${NUMBERNOW}, ${STRINGNOW}" level="info"/>
        <!-- Copy version.info to internal resource version.info -->
        <copy overwrite="true" file="build/version.info" tofile="src/com/corionis/els/resources/version.info" preservelastmodified="true"/>
        <copy overwrite="true" file="build/version.info" tofile="mock/bin/version.info" preservelastmodified="true"/>
        <!-- Write the update.info file -->
        <delete file="build/update.info" failonerror="false"/>
        <echo file="build/update.info" append="false">${els.deploy.url}${line.separator}</echo>
        <copy overwrite="true" file="build/update.info" tofile="mock/bin/update.info" preservelastmodified="true"/>
    </target>


    <!-- ELS main program ========================================== -->
    
    <!-- Compile ELS -->
    <target name="els-compile" depends="stamp">
        <mkdir dir="out/els/jar"/>
        <javac destdir="out/els/jar" classpathref="class.path" includeantruntime="false" debug="on">
            <src path="src"/>
            <include name="**/*.java"/>
        </javac>
        <!-- Merge annotation-generate Log4j2Plugins.dat with those found in lib Jar files -->
        <exec executable="/usr/bin/java">
            <arg value="-jar"/>
            <arg value="artifacts/bin/MergeLog4j2Plugins.jar"/>
            <arg value="--dat"/>
            <arg value="out/els/jar/META-INF/org/apache/logging/log4j/core/config/plugins/Log4j2Plugins.dat"/>
            <arg value="--lib"/>
            <arg value="lib"/>
        </exec>
        <!-- Save the merged Log4j2Plugins.dat -->
        <copy file="out/els/jar/META-INF/org/apache/logging/log4j/core/config/plugins/Log4j2Plugins.dat" tofile="out/Log4j2Plugins.dat" overwrite="true" preservelastmodified="true"/>
    </target>

    <!-- Assemble all the pieces to build the Jar -->
    <target name="els-assemble" depends="els-compile">
        <copy todir="out/els/jar/com/corionis/els/locales" preservelastmodified="true">
            <fileset dir="src/com/corionis/els/locales"/>
        </copy>
        <copy todir="out/els/jar/com/corionis/els/resources" preservelastmodified="true">
            <fileset dir="src/com/corionis/els/resources"/>
        </copy>
        <copy todir="out/els/jar" preservelastmodified="true">
            <fileset dir="artifacts/images/"/>
            <fileset dir="src/com/corionis/els/locales/"/>
            <fileset dir="src/com/corionis/els/resources/"/>
        </copy>
        <copy file="build/changes.html" tofile="out/els/jar/changes_en_US.html" preservelastmodified="true"/>
        <copy file="lib/log4j2.xml" todir="out/els/jar" preservelastmodified="true"/>
        <!-- Unpack all lib Jar files. May overwrite Log4j2Plugins.dat -->
        <unzip dest="out/els/jar">
            <fileset dir="lib">
                <include name="**/*.jar"/>
            </fileset>
        </unzip>
        <!-- Copy merged Log4j2Plugins.dat back -->
        <copy file="out/Log4j2Plugins.dat" tofile="out/els/jar/META-INF/org/apache/logging/log4j/core/config/plugins/Log4j2Plugins.dat" overwrite="true" preservelastmodified="true"/>
    </target>

    <!-- Assemble all the pieces to run from IDE build classes -->
    <target name="els-ide">
        <copy todir="out/production/ELS" preservelastmodified="true">
            <fileset dir="src/com/corionis/els/resources"/>
        </copy>
        <copy file="build/changes.html" tofile="out/production/ELS/changes_en_US.html" preservelastmodified="true"/>
        <copy file="lib/log4j2.xml" todir="out/production/ELS" preservelastmodified="true"/>
    </target>

    <!-- Build ELS.jar -->
    <target name="els-jar" depends="els-assemble">
        <manifest file="out/els/jar/META-INF/MANIFEST.MF">
            <attribute name="Main-Class" value="com.corionis.els.Main"/>
        </manifest>
        <jar destfile="build/ELS.jar" manifest="out/els/jar/META-INF/MANIFEST.MF">
            <fileset dir="out/els/jar" includes="**/"/>
        </jar>
        <copy overwrite="true" file="build/ELS.jar" tofile="mock/bin/ELS.jar" preservelastmodified="true"/>
    </target>

    <!-- Build ELS Linux .tar.gz -->
    <target name="els-linux" depends="els-jar">
        <delete failonerror="false">
            <fileset dir="build">
                <include name="ELS-*.tar.gz"/>
            </fileset>
        </delete>
        <mkdir dir="out/els/tar/ELS"/>
        <exec command="cp -rpf artifacts/stage/linux/ELS out/els/tar/" failonerror="true"/>
        <copy file="mock/bin/update.info" tofile="out/els/tar/ELS/bin/update.info" preservelastmodified="true"/>
        <copy file="artifacts/images/els-logo-98px.ico" todir="out/els/tar/ELS/bin" preservelastmodified="true"/>
        <copy file="artifacts/images/els-logo-98px.png" todir="out/els/tar/ELS/bin" preservelastmodified="true"/>
        <copy file="build/ELS.jar" todir="out/els/tar/ELS/bin" preservelastmodified="true"/>
        <exec command="tar cvzf build/ELS-${els.version.name}-${NUMBERNOW}.tar.gz -C out/els/tar ELS"/>
    </target>

    <!-- Build ELS macOS .dmg -->
    <target name="els-macos-dmg" depends="els-jar">
        <delete failonerror="false">
            <fileset dir="build">
                <include name="ELS-*.dmg"/>
            </fileset>
        </delete>
        <mkdir dir="out/els/dmg/ELS"/>
        <exec command="cp -rpf artifacts/stage/macos/ELS out/els/dmg/" failonerror="true"/>
        <copy file="mock/bin/update.info" tofile="out/els/dmg/ELS/bin/update.info" preservelastmodified="true"/>
        <copy file="artifacts/images/els-logo-98px.icns" todir="out/els/dmg/ELS/bin" preservelastmodified="true"/>
        <copy file="build/ELS.jar" todir="out/els/dmg/ELS/bin" preservelastmodified="true"/>
        <copy file="build/build-stamp.properties" tofile="out/els/dmg/ELS/build-stamp.properties" />
        <echo message="MANUAL STEP: Copy out/els/dmg/ELS to MacOS, complete DMG build on MacOS" />
    </target>

    <!-- Build ELS macOS .mac.tar.gz -->
    <target name="els-macos-tar" depends="els-jar">
        <delete failonerror="false">
            <fileset dir="build">
                <include name="ELS-*.mac.tar.gz"/>
            </fileset>
        </delete>
        <mkdir dir="out/els/mac.tar/ELS"/>
        <exec command="cp -rpf artifacts/stage/macos/ELS out/els/mac.tar/" failonerror="true"/>
        <copy file="mock/bin/update.info" tofile="out/els/mac.tar/ELS/bin/update.info" preservelastmodified="true"/>
        <copy file="artifacts/images/els-logo-98px.icns" todir="out/els/mac.tar/ELS/bin" preservelastmodified="true"/>
        <copy file="build/ELS.jar" todir="out/els/mac.tar/ELS/bin" preservelastmodified="true"/>
        <!-- copy file="build/build-stamp.properties" tofile="out/els/mac.tar/ELS/build-stamp.properties" / -->
        <exec command="tar cvzf build/ELS-${els.version.name}-${NUMBERNOW}.mac.tar.gz -C out/els/mac.tar ELS"/>
    </target>

    <!-- Build ELS Windows .zip -->
    <target name="els-windows" depends="els-jar">
        <delete failonerror="false">
            <fileset dir="build">
                <include name="ELS-*.exe"/>
                <include name="ELS-*.zip"/>
            </fileset>
        </delete>
        <mkdir dir="out/els/zip/ELS"/>
        <copy todir="out/els/zip/ELS" preservelastmodified="true">
            <fileset dir="artifacts/stage/windows"/>
        </copy>
        <copy file="mock/bin/update.info" tofile="out/els/zip/ELS/bin/update.info" preservelastmodified="true"/>
        <copy file="artifacts/images/els-logo-98px.ico" todir="out/els/zip/ELS/bin" preservelastmodified="true"/>
        <copy file="artifacts/images/els-logo-98px.png" todir="out/els/zip/ELS/bin" preservelastmodified="true"/>
        <copy file="build/ELS.jar" todir="out/els/zip/ELS/bin" preservelastmodified="true"/>
        <zip destfile="build/ELS-${els.version.name}-${NUMBERNOW}.zip">
            <zipfileset dir="out/els/zip" includes="**/*"/>
        </zip>
        <copy file="build/build-stamp.properties" tofile="out/els/zip/ELS/build-stamp.properties" />
        <echo message="MANUAL STEP: Copy out/els/zip/ELS to Windows, complete installer build on Windows" />
    </target>


    <!-- ELS Updater ========================================== -->

    <!-- Compile Updater -->
    <target name="updater-compile" depends="els-compile">
        <mkdir dir="out/updater/jar"/>
        <copy overwrite="true" file="out/els/jar/com/corionis/els/gui/Preferences.class" tofile="out/updater/jar/com/corionis/els/gui/Preferences.class"/>
        <copy overwrite="true" file="out/els/jar/com/corionis/els/Configuration.class" tofile="out/updater/jar/com/corionis/els/Configuration.class"/>
        <copy overwrite="true" file="out/els/jar/com/corionis/els/Context.class" tofile="out/updater/jar/com/corionis/els/Context.class"/>
        <copy overwrite="true" file="out/els/jar/com/corionis/els/MungeException.class" tofile="out/updater/jar/com/corionis/els/MungeException.class"/>
        <copy overwrite="true" file="out/els/jar/com/corionis/els/Utils.class" tofile="out/updater/jar/com/corionis/els/Utils.class"/>
        <copy overwrite="true" file="build/version.info" tofile="out/updater/jar/com/corionis/els/resources/version.info"/>
        <javac destdir="out/updater/jar" classpathref="class.path" includeantruntime="false" debug="on">
            <src path="updater/src"/>
            <include name="**/*.java"/>
        </javac>
    </target>

    <!-- Assemble all the pieces to build the Updater Jar -->
    <target name="updater-assemble" depends="updater-compile">
        <copy todir="out/updater/jar/com/corionis/els/locales" preservelastmodified="true">
            <fileset dir="src/com/corionis/els/locales"/>
        </copy>
        <copy todir="out/updater/jar/com/corionis/els_updater/locales" preservelastmodified="true">
            <fileset dir="src/com/corionis/els/locales"/>
        </copy>
        <copy todir="out/updater/jar" preservelastmodified="true">
            <file file="artifacts/images/els-logo-48px.png"/>
            <fileset dir="src/com/corionis/els/locales/"/>
            <file file="build/version.info"/>
        </copy>
        <!-- copy the separate log4j2-updater.xml to log4j2.xml -->
        <copy file="lib/log4j2-updater.xml" tofile="out/updater/jar/log4j2.xml" preservelastmodified="true"/>
        <unzip dest="out/updater/jar">
            <fileset dir="lib">
                <include name="**/commons-compress-1.23.0.jar"/>
                <include name="**/commons-io-2.11.0.jar"/>
                <include name="**/commons-lang3-3.12.0.jar"/>
                <include name="**/flatlaf-3.4.jar"/>
                <include name="**/flatlaf-extras-3.4.jar"/>
                <include name="**/flatlaf-intellij-themes-3.4.jar"/>
                <include name="**/gson-2.10.1.jar"/>
                <include name="**/guava-32.0.1-jre.jar"/>
                <include name="**/javax.activation-1.2.0.jar"/>
                <include name="**/log4j-api-2.23.0.jar"/>
                <include name="**/log4j-core-2.23.0.jar"/>
                <include name="**/log4j-slf4j2-impl-2.23.0.jar"/>
                <include name="**/slf4j-api-2.0.12.jar"/>
                <include name="**/slf4j-simple-2.0.12.jar"/>
                <include name="**/sshd-common-2.10.0.jar"/>
            </fileset>
        </unzip>
    </target>

    <!-- Build ELS-Updater.jar -->
    <target name="updater-jar" depends="updater-assemble">
        <manifest file="out/updater/jar/META-INF/MANIFEST.MF">
            <attribute name="Main-Class" value="com.corionis.els_updater.Main"/>
        </manifest>
        <jar destfile="build/ELS_Updater.jar" manifest="out/updater/jar/META-INF/MANIFEST.MF">
            <fileset dir="out/updater/jar" includes="**/"/>
        </jar>
        <copy overwrite="true" file="build/ELS_Updater.jar" tofile="mock/bin/ELS_Updater.jar" preservelastmodified="true"/>
    </target>

    <!-- Build Updater Linux .tar.gz -->
    <target name="updater-linux" depends="updater-jar">
        <delete failonerror="false">
            <fileset dir="build">
                <include name="ELS_*.tar.gz"/>
            </fileset>
        </delete>
        <mkdir dir="out/updater/tar/ELS_Updater"/>
        <exec command="cp -rpf artifacts/stage/linux/ELS out/updater/tar/" failonerror="true"/>
        <rename src="out/updater/tar/ELS" dest="out/updater/tar/ELS_Updater"/>
        <delete file="out/updater/tar/ELS_Updater/ELS-Navigator.sh" failonerror="false"/>
        <copy file="mock/bin/update.info" tofile="out/updater/tar/ELS_Updater/bin/update.info" preservelastmodified="true"/>
        <copy file="build/ELS_Updater.jar" todir="out/updater/tar/ELS_Updater/bin" preservelastmodified="true" />
        <exec command="tar cvzf build/ELS_Updater-${els.version.name}-${NUMBERNOW}.tar.gz -C out/updater/tar ELS_Updater"/>
    </target>

    <!-- Build Updater macOS .dmg -->
    <target name="updater-macos" depends="els-jar">
        <delete failonerror="false">
            <fileset dir="build">
                <include name="ELS_*.dmg"/>
            </fileset>
        </delete>
        <mkdir dir="out/updater/dmg/ELS_Updater"/>
        <exec command="cp -rpf artifacts/stage/macos/ELS out/updater/dmg/" failonerror="true"/>
        <rename src="out/updater/dmg/ELS" dest="out/updater/dmg/ELS_Updater"/>
        <copy file="mock/bin/update.info" tofile="out/updater/dmg/ELS_Updater/bin/update.info" preservelastmodified="true"/>
        <copy file="artifacts/images/els-logo-98px.icns" todir="out/updater/dmg/ELS_Updater/bin" preservelastmodified="true"/>
        <copy file="build/ELS_Updater.jar" todir="out/updater/dmg/ELS_Updater/bin" preservelastmodified="true"/>
        <copy file="build/build-stamp.properties" tofile="out/updater/dmg/ELS_Updater/build-stamp.properties" />
        <echo message="MANUAL STEP: Copy out/updater/dmg/ELS_Updater to MacOS, complete DMG build on MacOS" />
    </target>

    <!-- Build Updater Windows .zip -->
    <target name="updater-windows" depends="updater-jar">
        <delete failonerror="false">
            <fileset dir="build">
                <include name="ELS_*.zip"/>
            </fileset>
        </delete>
        <mkdir dir="out/updater/zip/ELS_Updater"/>
        <copy todir="out/updater/zip/ELS_Updater" preservelastmodified="true">
            <fileset dir="artifacts/stage/windows"/>
        </copy>
        <copy file="mock/bin/update.info" tofile="out/updater/zip/ELS_Updater/bin/update.info" preservelastmodified="true"/>
        <copy file="build/ELS_Updater.jar" todir="out/updater/zip/ELS_Updater/bin" preservelastmodified="true"/>
        <delete file="out/updater/zip/ELS_Updater/ELS-Navigator.exe" failonerror="false"/>
        <delete file="out/updater/zip/ELS_Updater/bin/Shortcut.exe" failonerror="false"/>
        <zip destfile="build/ELS_Updater-${els.version.name}-${NUMBERNOW}.zip">
            <zipfileset dir="out/updater/zip" includes="**/*"/>
        </zip>
    </target>


    <!-- Deployment ========================================== -->
    <!-- The 'deploy' directory is where ELS gets updates -->
    <target name="deploy">
        <delete failonerror="false">
            <fileset dir="deploy">
                <include name="*.dmg"/>
                <include name="*.exe"/>
                <include name="*.info"/>
                <include name="*.jar"/>
                <include name="*.tar.gz"/>
                <include name="*.zip"/>
            </fileset>
        </delete>
        <copy file="build/changes.html" todir="deploy" preservelastmodified="true"/>
        <copy todir="deploy" preservelastmodified="true" failonerror="false">
            <fileset file="build/*.dmg"/>
            <fileset file="build/*.exe"/>
            <fileset file="build/*.jar"/>
            <fileset file="build/*.tar.gz"/>
            <fileset file="build/*.zip"/>
        </copy>
        <copy file="build/update.info" todir="deploy" preservelastmodified="true"/>
        <copy file="build/version.info" todir="deploy" preservelastmodified="true"/>
        <copy file="build/changes.html" tofile="docs/_includes/changes.html" preservelastmodified="true"/>
    </target>

    <!-- Configure the GitHub Pages _config.yml YAML file for deployment -->
    <target name="deploy-website">
        <delete file="docs/_config.yml"/>
        <!-- copy the template and append this build's information -->
        <copy file="artifacts/stage/_config.yml" todir="docs"/>
        <echo file="docs/_config.yml" append="true">version: ${els.version.name}${line.separator}</echo>
        <echo file="docs/_config.yml" append="true">build: ${STRINGNOW}${line.separator}</echo>
        <echo file="docs/_config.yml" append="true">github:${line.separator}</echo>
        <echo file="docs/_config.yml" append="true">  jar_url: ${els.deploy.url}/ELS.jar${line.separator}</echo>
        <echo file="docs/_config.yml" append="true">  linux_url: ${els.deploy.url}/ELS-${els.version.name}-${NUMBERNOW}.tar.gz${line.separator}</echo>
        <echo file="docs/_config.yml" append="true">  macos_url: ${els.deploy.url}/ELS-${els.version.name}-${NUMBERNOW}.mac.tar.gz${line.separator}</echo>
        <echo file="docs/_config.yml" append="true">  windows_exe_url: ${els.deploy.url}/ELS-${els.version.name}-${NUMBERNOW}.exe${line.separator}</echo>
        <echo file="docs/_config.yml" append="true">  windows_zip_url: ${els.deploy.url}/ELS-${els.version.name}-${NUMBERNOW}.zip${line.separator}</echo>
    </target>


    <!-- Primary Targets ========================================== -->

    <target name="All" depends="ELS, Updater" description="Build all deliverables"/>

    <target name="All-Deploy" depends="All, Deploy" description="Build all deliverables and copy to deploy"/>

    <target name="Deploy" depends="deploy, deploy-website" description="Deploy ELS and web site" />

    <target name="ELS" depends="els-linux, els-windows, els-macos-tar" description="Build ELS"/>

    <target name="Jars" depends="els-jar, updater-jar" description="Build Jars"/>

    <target name="Linux" depends="els-linux, updater-linux" description="Build all Linux deliverables"/>

    <target name="MacOS" depends="els-macos-tar" description="Build all MacOS deliverables"/>
    <!-- target name="MacOS" depends="els-macos-dmg, updater-macos" description="Build all MacOS deliverables"/ -->

    <target name="Updater" depends="updater-linux, updater-windows" description="Build Updater"/>
    <!-- target name="Updater" depends="updater-linux, updater-windows, updater-macos" description="Build Updater"/ -->

    <target name="Windows" depends="els-windows, updater-windows" description="Build all Windows deliverables"/>

</project>
